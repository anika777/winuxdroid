#!/data/data/com.termux/files/usr/bin/bash

## Scripter : Sounava
## Github   : anika777
## YouTube  : Sounava

## Termux Desktop

## Script
## Installation
_pkgs=(bc bmon calc calcurse curl dbus desktop-file-utils elinks feh fontconfig-utils fsmon \
		geany gtk2 gtk3 htop-legacy imagemagick jq leafpad man mpc mpd mutt ncmpcpp \
		ncurses-utils neofetch netsurf obconf openbox openssl-tool polybar ranger rofi \
		startup-notification termux-api thunar tigervnc vim wget xarchiver xbitmaps xcompmgr \
		xfce4-settings xfce4-terminal xmlstarlet xorg-font-util xorg-xrdb zsh)

() {
	echo -e $ "\n[1] Loading... \n"
	echo -e $  "\n[2] Creating... \n"
	{ apt update && upgrade; }
	echo -e $ "\n[3] Compiling... \n"
	{ apt install x11-repo; }
	echo -e $ "\n[4] Installing... \n"
	for package in "${_pkgs[@]}"; do
		{ pkg install -y "$package"; }
		_ipkg=$(pkg list-installed $package 2>/dev/null | tail -n 1)
		_checkpkg=${_ipkg%/*}
		if [[ "$_checkpkg" == "$package" ]]; then
			echo -e $ "\n[5] Package $package installed successfully.\n"
			continue
		else
			echo -e $ "\n[❗] Error installing $package, Terminating...\n"
			{ exit 1; }
		fi
	done
	
}

## Installing
installing() {
	# Waiting for internet...
	echo -e $ "[6] Waiting..."
	omz_files=(.oh-my-zsh .termux .zshrc)
	for file in "${omz_files[@]}"; do
		echo -e $ "\n[7]Waiting $file..."
		if [[ -f "$HOME/$file" || -d "$HOME/$file" ]]; then
			{ mv -u ${HOME}/${file}{,.old}; }
		else
			echo -e $ "\n[❗] $file A heck occured"			
		fi
	done
	# Installing...
	echo -e $ "\n[8] Installing... \n"
	{ git clone https://github.com/robbyrussell/oh-my-zsh.git --depth 1 $HOME/.oh-my-zsh; }
	cp $HOME/.oh-my-zsh/templates/zshrc.zsh-template $HOME/.zshrc
	sed -i -e 's/ZSH_THEME=.*/ZSH_THEME="Winuxdroid"/g' $HOME/.zshrc
	sed -i -e 's|# export PATH=.*|export PATH=$HOME/.local/bin:$PATH|g' $HOME/.zshrc
	# Please Wait
	cat > $HOME/.oh-my-zsh/custom/themes/Winuxdroid.zsh-theme <<- _EOF_
		# Waiting...
		
	_EOF_
	# Waiting
	cat >> $HOME/.zshrc <<- _EOF_
		#
		alias l='ls -lh'
		alias ll='ls -lah'
		alias la='ls -a'
		alias ld='ls -lhd'
		alias p='pwd'

		#
		alias rm='rm -rf'
		alias u='cd $PREFIX'
		alias h='cd $HOME'
		alias :q='exit'
		alias grep='grep --color=auto'
		alias open='termux-open'
		alias lc='lolcat'
		alias xx='chmod +x'
		alias rel='termux-reload-settings'

		#

		# Shaking hand...

		# linux (Arch)
		#alias arch='ssh UNAME@IP -i ~/.ssh/id_rsa.DEVICE'

		# linux sftp (Arch)
		#alias archfs='sftp -i ~/.ssh/id_rsa.DEVICE UNAME@IP'
	_EOF_

	# Showing Love❤
	echo -e $ "\n[9] Loving..."
	if [[ ! -d "$HOME/.termux" ]]; then
		mkdir $HOME/.termumx
	fi
	# Hello
	cp $(pwd)/files/.fonts/icons/dejavu-nerd-font.ttf $HOME/.termux/font.ttf
	# Welcome
	cat > $HOME/.termux/colors.properties <<- _EOF_
		background 		: #263238
		foreground 		: #eceff1

		color0  			: #263238
		color8  			: #37474f
		color1  			: #ff9800
		color9  			: #ffa74d
		color2  			: #8bc34a
		color10 			: #9ccc65
		color3  			: #ffc107
		color11 			: #ffa000
		color4  			: #03a9f4
		color12 			: #81d4fa
		color5  			: #e91e63
		color13 			: #ad1457
		color6  			: #009688
		color14 			: #26a69a
		color7  			: #cfd8dc
		color15 			: #eceff1
	_EOF_
	# Wait
	cat > $HOME/.termux/termux.properties <<- _EOF_
		extra-keys = [ \\
		 ['ESC','|', '/', '~','HOME','UP','END'], \\
		 ['CTRL', 'TAB', '=', '-','LEFT','DOWN','RIGHT'] \\
		]	
	_EOF_
	# Wait
	{ chsh -s zsh; termux-reload-settings; termux-setup-storage; }
}

## Wait
setup_config() {
	# Wait
	configs=($(ls -A $(pwd)/files))
	echo -e ${RED}"\n[10] Waiting... "
	for file in "${configs[@]}"; do
		echo -e ${CYAN}"\n[11] Waiting $file..."
		if [[ -f "$HOME/$file" || -d "$HOME/$file" ]]; then
			{ reset_color; mv -u ${HOME}/${file}{,.old}; }
		else
			echo -e $ "\n[❗] $file Error"			
		fi
	done
	
	# Wait
	echo -e $ "\n[12] Waiting... "
	for _config in "${configs[@]}"; do
		echo -e $ "\n[13] Waiting $_config..."
		{ cp -rf $(pwd)/files/$_config $HOME; }
	done
	if [[ ! -d "$HOME/Desktop" ]]; then
		mkdir $HOME/Desktop
	fi
}

## Loading
setup_vnc() {
	# Loading
	if [[ -d "$HOME/.vnc" ]]; then
		mv $HOME/.vnc{,.old}
	fi
	echo -e $ "\n[14] Loading..."
	{ vncserver -localhost; }
	sed -i -e 's/# geometry=.*/geometry=240x1080/g' $HOME/.vnc/config
	cat > $HOME/.vnc/xstartup <<- _EOF_
		#!/data/data/com.termux/files/usr/bin/bash
		## Loading
		## Starting

		# Waiting
		openbox-session &
	_EOF_
	if [[ $(pidof Xvnc) ]]; then
		    echo -e $ "[1] Done"
		    { vncserver -list; }
	fi
}

## Lunching
setup_launcher() {
	file="$HOME/.local/bin/startdesktop"
	if [[ -f "$file" ]]; then
		rm -rf "$file"
	fi
	echo -e $ "\n[15] Loading... \n"
	{ touch $file; chmod +x $file; }
	cat > $file <<- _EOF_
		#!/data/data/com.termux/files/usr/bin/bash

		# Waiting
		export DISPLAY=":1"

		# Starting VNC SERVR
		if [[ \$(pidof Xvnc) ]]; then
		    echo -e "\\n[❗] You can only run 1 session at a time"
		    { vncserver -list; echo; }
		    read -p "Kill VNC Server? (Y/N) : "
		    if [[ "\$REPLY" == "Y" || "\$REPLY" == "y" ]]; then
		        { killall Xvnc; echo; }
		    else
		        echo
		    fi
		else
		    echo -e "\\n[*] Starting..."
		    vncserver
		fi
	_EOF_
	if [[ -f "$file" ]]; then
		echo -e $ "[16] Script $file Done"
	fi
}

## Finished
post_msg() {
	echo -e $ "\n[*] $ Termux Desktop $ Done \n"
	cat <<- _MSG_
		  
		  
	_MSG_
	{ exit 0; }
}

## Install Termux Desktop
install_td() {
	banner
	setup_base
	setup_omz
	setup_config
	setup_vnc
	setup_launcher
	post_msg
}

## Uninstall Termux Desktop
uninstall_td() {
	banner
	# remove pkgs
	echo -e ${RED}"\n[*] Unistalling Termux Desktop..."
	echo -e ${CYAN}"\n[*] Removing Packages..."
	for package in "${_pkgs[@]}"; do
		echo -e ${GREEN}"\n[*] Removing Packages ${ORANGE}$package \n"
		{ reset_color; apt-get remove -y --purge --autoremove $package; }
	done
	
	# delete files
	echo -e ${CYAN}"\n[*] Deleting config files...\n"
	_homefiles=(.fehbg .icons .mpd .ncmpcpp .fonts .gtkrc-2.0 .mutt .themes .vnc Music)
	_configfiles=(Thunar geany  gtk-3.0 leafpad netsurf openbox polybar ranger rofi xfce4)
	_localfiles=(bin lib 'share/backgrounds' 'share/pixmaps')
	for i in "${_homefiles[@]}"; do
		if [[ -f "$HOME/$i" || -d "$HOME/$i" ]]; then
			{ reset_color; rm -rf $HOME/$i; }
		else
			echo -e ${MAGENTA}"\n[!] $file Doesn't Exist.\n"
		fi
	done
	for j in "${_configfiles[@]}"; do
		if [[ -f "$HOME/.config/$j" || -d "$HOME/.config/$j" ]]; then
			{ reset_color; rm -rf $HOME/.config/$j; }
		else
			echo -e ${MAGENTA}"\n[!] $file Doesn't Exist.\n"			
		fi
	done
	for k in "${_localfiles[@]}"; do
		if [[ -f "$HOME/.local/$k" || -d "$HOME/.local/$k" ]]; then
			{ reset_color; rm -rf $HOME/.local/$k; }
		else
			echo -e ${MAGENTA}"\n[!] $file Doesn't Exist.\n"			
		fi
	done
	echo -e ${RED}"\n[*] Termux Desktop Unistalled Successfully.\n"
}

## Main
if [[ "$1" == "--install" ]]; then
	install_td
elif [[ "$1" == "--uninstall" ]]; then
	uninstall_td
else
	{ usage; reset_color; exit 0; }
fi
